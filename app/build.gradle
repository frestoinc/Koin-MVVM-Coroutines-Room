plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.frestoinc.sampleapp_kotlin"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 2
        versionName "1.0.1($versionCode)"
        archivesBaseName = versionName
        setProperty("archivesBaseName", "${applicationId}-v${versionName}")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["room.incremental"] = "true"
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            resValue "string", "app_version", "${defaultConfig.versionName}${".debug"}"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.3.2'

    implementation 'androidx.fragment:fragment-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    def timber_version = "4.7.1"
    implementation "com.jakewharton.timber:timber:$timber_version"

    /**
     * Hilt
     */
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    def android_hilt_version = "1.0.0-alpha03"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$android_hilt_version"
    kapt "androidx.hilt:hilt-compiler:$android_hilt_version"

    /**
     * Java 8+ API desugaring support
     */
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    /**
     *  Lifecycle
     */
    def lifecycle_version = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    /**
     * Coroutine
     */
    def coroutine_version = "1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"


    /**
     * Gson
     */
    def gson_version = "2.8.6"
    implementation "com.google.code.gson:gson:$gson_version"

    /**
     * Retrofit
     */
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    /**
     * OkHttp
     */
    def okhttp_version = "4.9.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    /**
     * Room
     */
    def room_version = "2.3.0-rc01"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    /**
     * Shimmer Effect
     */
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'


    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    /**
     * Mock webserver for Android Test
     */
    def mockweb_version = "4.0.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockweb_version"

    /**
     * Unit Testing
     */
    def core_testing_version = "1.1.1"
    testImplementation "android.arch.core:core-testing:$core_testing_version"

    // Hilt testing dependencies
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    /**
     * Coroutines test
     */
    def coroutines_test_version = "1.2.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"

    /**
     * Mockk
     */
    def mockk_version = "1.9.3"
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"

    /**
     * Glide
     */
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    /**
     * Coroutine-Worker
     */
    def coroutinework_version = '2.3.3'
    implementation "androidx.work:work-runtime-ktx:$coroutinework_version"
    androidTestImplementation "androidx.work:work-testing:$coroutinework_version"
}
